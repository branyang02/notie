name: Publish to npm

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Configure npm for authentication
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Determine version bump
        id: version_bump
        run: |
          if [[ "${{ github.event.head_commit.message }}" =~ ^fix ]]; then
            echo "bump=patch" >> $GITHUB_ENV
          elif [[ "${{ github.event.head_commit.message }}" =~ ^feat ]]; then
            echo "bump=minor" >> $GITHUB_ENV
          elif [[ "${{ github.event.head_commit.message }}" =~ BREAKING[[:space:]]CHANGE ]]; then
            echo "bump=major" >> $GITHUB_ENV
          else
            echo "bump=patch" >> $GITHUB_ENV
          fi

      - name: Bump version
        id: bump_version
        run: |
          npm version ${{ env.bump }} --no-git-tag-version
          npm install --package-lock-only  # Update package-lock.json with the new version
          cd demo-app && npm install --package-lock-only && cd .. # Update package-lock.json in demo-app
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Build the package
        run: npm run build

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push version bump
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add package.json package-lock.json
          git commit -m "ci: bump version to ${{ env.new_version }}"
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
